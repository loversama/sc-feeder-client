"use strict";const n=require("electron");const u=function(t,o,r){let i=Promise.resolve();function a(d){const s=new Event("vite:preloadError",{cancelable:!0});if(s.payload=d,window.dispatchEvent(s),!s.defaultPrevented)throw d}return i.then(d=>{for(const s of d||[])s.status==="rejected"&&a(s.reason);return t().catch(a)})};console.log("PRELOAD EXECUTING NOW");let l=null,p=null;n.contextBridge.exposeInMainWorld("ipcRenderer",{on(...e){const[t,o]=e;return n.ipcRenderer.on(t,(r,...i)=>o(r,...i)),n.ipcRenderer},off(...e){const[t,...o]=e;return n.ipcRenderer.off(t,...o),n.ipcRenderer},send(...e){const[t,...o]=e;n.ipcRenderer.send(t,...o)},invoke(...e){const[t,...o]=e;return n.ipcRenderer.invoke(t,...o)},removeListener(...e){const[t,o]=e;return n.ipcRenderer.removeListener(t,o),n.ipcRenderer},removeAllListeners(e){return n.ipcRenderer.removeAllListeners(e),n.ipcRenderer},sendToHost(e,...t){n.ipcRenderer.sendToHost(e,...t)}});n.contextBridge.exposeInMainWorld("electronAuthBridge",{getStoredAuthData:()=>n.ipcRenderer.invoke("auth:get-tokens"),notifyElectronOfNewTokens:e=>{n.ipcRenderer.send("auth:store-tokens",e)},onTokensUpdated:e=>{const t=(o,r)=>e(o,r);return n.ipcRenderer.on("auth:tokens-updated",t),()=>{n.ipcRenderer.removeListener("auth:tokens-updated",t)}}});n.contextBridge.exposeInMainWorld("logMonitorApi",{invoke:(...e)=>{const[t,...o]=e;return n.ipcRenderer.invoke(t,...o)},getLogPath:()=>n.ipcRenderer.invoke("get-log-path"),setLogPath:e=>n.ipcRenderer.send("set-log-path",e),selectLogDirectory:()=>n.ipcRenderer.invoke("select-log-directory"),getSessions:e=>n.ipcRenderer.invoke("get-sessions",e),getKillEvents:e=>n.ipcRenderer.invoke("get-kill-events",e),getGlobalKillEvents:e=>n.ipcRenderer.invoke("get-global-kill-events",e),setFeedMode:e=>n.ipcRenderer.invoke("set-feed-mode",e),getFeedMode:()=>n.ipcRenderer.invoke("get-feed-mode"),searchEvents:(e,t,o)=>n.ipcRenderer.invoke("search-events",e,t,o),loadMoreEvents:(e,t)=>n.ipcRenderer.invoke("load-more-events",e,t),getEventStoreStats:()=>n.ipcRenderer.invoke("get-event-store-stats"),openEventDetailsWindow:e=>{console.log("Preload: Calling openEventDetailsWindow with event ID:",e==null?void 0:e.id);try{const t=JSON.stringify(e),o=JSON.parse(t);return console.log("Preload: Serialized event data successfully"),n.ipcRenderer.invoke("open-event-details-window",o)}catch(t){console.error("Preload: Error serializing event data:",t);const o={id:(e==null?void 0:e.id)||"unknown-id",timestamp:(e==null?void 0:e.timestamp)||new Date().toISOString(),deathType:(e==null?void 0:e.deathType)||"Unknown"};return console.log("Preload: Trying with minimal data:",o),n.ipcRenderer.invoke("open-event-details-window",o)}},getPassedEventData:()=>(console.log("Preload: Getting passed event data"),n.ipcRenderer.invoke("get-passed-event-data")),closeCurrentWindow:()=>(console.log("Preload: Requesting to close current window"),n.ipcRenderer.invoke("close-current-window")),getLastLoggedInUser:()=>n.ipcRenderer.invoke("get-last-logged-in-user"),getNotificationSettings:()=>n.ipcRenderer.invoke("get-notification-settings"),setNotificationSettings:e=>n.ipcRenderer.invoke("set-notification-settings",e),getLastActivePage:()=>n.ipcRenderer.invoke("get-last-active-page"),setLastActivePage:e=>n.ipcRenderer.invoke("set-last-active-page",e),getFetchProfileData:()=>n.ipcRenderer.invoke("get-fetch-profile-data"),setFetchProfileData:e=>n.ipcRenderer.invoke("set-fetch-profile-data",e),getSoundEffects:()=>n.ipcRenderer.invoke("get-sound-effects"),setSoundEffects:e=>n.ipcRenderer.invoke("set-sound-effects",e),getLaunchOnStartup:()=>n.ipcRenderer.invoke("get-launch-on-startup"),setLaunchOnStartup:e=>n.ipcRenderer.invoke("set-launch-on-startup",e),getApiSettings:()=>n.ipcRenderer.invoke("get-api-settings"),setApiSettings:e=>n.ipcRenderer.invoke("set-api-settings",e),getCsvLogPath:()=>n.ipcRenderer.invoke("get-csv-log-path"),setCsvLogPath:e=>n.ipcRenderer.invoke("set-csv-log-path",e),openSettingsWindow:()=>n.ipcRenderer.invoke("open-settings-window"),openWebContentWindow:e=>n.ipcRenderer.invoke("open-web-content-window",e),closeSettingsWindow:()=>n.ipcRenderer.invoke("close-settings-window"),closeWebContentWindow:()=>n.ipcRenderer.invoke("close-web-content-window"),openExternalWebWindow:(e,t)=>n.ipcRenderer.invoke("open-external-web-window",e,t),resolveEntity:(e,t)=>n.ipcRenderer.invoke("entity:resolve",e,t),resolveEntitiesBatch:e=>n.ipcRenderer.invoke("entity:resolve-batch",e),isNpcEntity:e=>n.ipcRenderer.invoke("entity:is-npc",e),filterNpcs:e=>n.ipcRenderer.invoke("entity:filter-npcs",e),getDefinitions:()=>n.ipcRenderer.invoke("definitions:get"),getDefinitionsVersion:()=>n.ipcRenderer.invoke("definitions:get-version"),getDefinitionsStats:()=>n.ipcRenderer.invoke("definitions:get-stats"),forceRefreshDefinitions:e=>n.ipcRenderer.invoke("definitions:force-refresh",e),testNpcPatterns:()=>n.ipcRenderer.invoke("debug:test-npc-patterns"),forceRefreshNpcList:()=>n.ipcRenderer.invoke("force-refresh-npc-list"),resetSessions:()=>n.ipcRenderer.invoke("reset-sessions"),resetEvents:()=>n.ipcRenderer.invoke("reset-events"),rescanLog:()=>n.ipcRenderer.invoke("rescan-log"),authLogin:(e,t)=>n.ipcRenderer.invoke("auth:login",e,t),authLogout:()=>n.ipcRenderer.invoke("auth:logout"),authGetStatus:()=>n.ipcRenderer.invoke("auth:getStatus"),authGetAccessToken:()=>n.ipcRenderer.invoke("auth:getAccessToken"),authGetTokens:()=>n.ipcRenderer.invoke("auth:get-tokens"),authStoreTokens:e=>n.ipcRenderer.invoke("auth:store-tokens",e),authRefreshToken:()=>n.ipcRenderer.invoke("auth:refreshToken"),authShowLogin:()=>n.ipcRenderer.invoke("auth:show-login"),authLoginSuccess:()=>n.ipcRenderer.invoke("auth:loginSuccess"),authContinueAsGuest:()=>n.ipcRenderer.invoke("auth:continueAsGuest"),authCloseLoginWindow:()=>n.ipcRenderer.invoke("auth:closeLoginWindow"),authResizeLoginWindow:e=>n.ipcRenderer.invoke("auth:resize-login-window",e),webContentNavigateToSection:e=>n.ipcRenderer.invoke("web-content:navigate-to-section",e),webContentUpdateAuthTokens:e=>n.ipcRenderer.invoke("web-content:update-auth-tokens",e),webContentSetArchitecture:e=>n.ipcRenderer.invoke("web-content:set-architecture",e),webContentGetArchitecture:()=>n.ipcRenderer.invoke("web-content:get-architecture"),openAuthenticatedWebContentWindow:e=>n.ipcRenderer.invoke("open-authenticated-web-content-window",e),closeAuthenticatedWebContentWindow:()=>n.ipcRenderer.invoke("close-authenticated-web-content-window"),openEnhancedWebContentWindow:e=>n.ipcRenderer.invoke("enhanced-window:attach-to-existing",e),closeEnhancedWebContentWindow:()=>n.ipcRenderer.invoke("enhanced-window:close-window"),getEnhancedWebContentStatus:()=>n.ipcRenderer.invoke("enhanced-window:get-status"),executeInWebContentsView:e=>n.ipcRenderer.invoke("enhanced-webcontents:execute-js",e),navigateToSearchPage:e=>n.ipcRenderer.invoke("enhanced-webcontents:navigate-to-search",e),getSettingsWindowStatus:()=>n.ipcRenderer.invoke("get-settings-window-status"),getWebContentWindowStatus:()=>n.ipcRenderer.invoke("get-web-content-window-status"),getProfile:()=>n.ipcRenderer.invoke("get-profile"),getResourcePath:()=>n.ipcRenderer.invoke("get-resource-path"),getPreloadPath:e=>n.ipcRenderer.invoke("get-preload-path",e),getAppVersion:()=>n.ipcRenderer.invoke("get-app-version"),getGuestModeStatus:()=>n.ipcRenderer.invoke("app:get-guest-mode-status"),getCurrentLocation:()=>n.ipcRenderer.invoke("get-current-location"),getLocationHistory:()=>n.ipcRenderer.invoke("get-location-history"),getLocationState:()=>n.ipcRenderer.invoke("get-location-state"),onIpcMessage:(e,t)=>{const o=(r,...i)=>t(...i);return n.ipcRenderer.on(e,o),()=>n.ipcRenderer.removeListener(e,o)},onMainAuthUpdate:e=>{const t=(o,r)=>e(o,r);return n.ipcRenderer.on("main-auth-update",t),()=>{n.ipcRenderer.removeListener("main-auth-update",t)}},onLogUpdate:e=>(n.ipcRenderer.on("log-update",e),()=>n.ipcRenderer.removeListener("log-update",e)),onLogReset:e=>(n.ipcRenderer.on("log-reset",e),()=>n.ipcRenderer.removeListener("log-reset",e)),onLogStatus:e=>(n.ipcRenderer.on("log-status",e),()=>n.ipcRenderer.removeListener("log-status",e)),onLogPathUpdated:e=>(n.ipcRenderer.on("log-path-updated",e),()=>n.ipcRenderer.removeListener("log-path-updated",e)),onKillFeedEvent:e=>(n.ipcRenderer.on("kill-feed-event",e),()=>n.ipcRenderer.removeListener("kill-feed-event",e)),onAuthStatusChanged:e=>(n.ipcRenderer.on("auth-status-changed",e),()=>n.ipcRenderer.removeListener("auth-status-changed",e)),onConnectionStatusChanged:e=>(n.ipcRenderer.on("connection-status-changed",e),()=>n.ipcRenderer.removeListener("connection-status-changed",e)),onGameModeUpdate:e=>(n.ipcRenderer.on("game-mode-update",e),()=>n.ipcRenderer.removeListener("game-mode-update",e)),onSettingsWindowStatus:e=>(n.ipcRenderer.on("settings-window-status",e),()=>n.ipcRenderer.removeListener("settings-window-status",e)),onWebContentWindowStatus:e=>(n.ipcRenderer.on("web-content-window-status",e),()=>n.ipcRenderer.removeListener("web-content-window-status",e)),checkForUpdate:()=>{n.ipcRenderer.send("check-for-update")},downloadUpdate:()=>{n.ipcRenderer.send("download-update")},installUpdate:()=>{n.ipcRenderer.send("install-update")},onUpdateChecking:e=>(n.ipcRenderer.on("update-checking",e),()=>n.ipcRenderer.removeListener("update-checking",e)),onUpdateCheckingTimeout:e=>(n.ipcRenderer.on("update-checking-timeout",e),()=>n.ipcRenderer.removeListener("update-checking-timeout",e)),onUpdateAvailable:e=>(n.ipcRenderer.on("update-available",e),()=>n.ipcRenderer.removeListener("update-available",e)),onUpdateNotAvailable:e=>(n.ipcRenderer.on("update-not-available",e),()=>n.ipcRenderer.removeListener("update-not-available",e)),onUpdateDownloadProgress:e=>(n.ipcRenderer.on("update-download-progress",e),()=>n.ipcRenderer.removeListener("update-download-progress",e)),onUpdateDownloaded:e=>(n.ipcRenderer.on("update-downloaded",e),()=>n.ipcRenderer.removeListener("update-downloaded",e)),onUpdateError:e=>(n.ipcRenderer.on("update-error",e),()=>n.ipcRenderer.removeListener("update-error",e)),debugSimulateUpdateAvailable:()=>{n.ipcRenderer.send("debug:simulate-update-available")},debugSimulateUpdateDownload:()=>{n.ipcRenderer.send("debug:simulate-update-download")},debugSimulateUpdateError:()=>{n.ipcRenderer.send("debug:simulate-update-error")},debugSimulateUpdateChecking:()=>{n.ipcRenderer.send("debug:simulate-update-checking")},debugResetUpdateSimulation:()=>{n.ipcRenderer.send("debug:reset-update-simulation")},sendLogToMain:e=>n.ipcRenderer.invoke("send-log-to-main",e),openExternal:e=>n.ipcRenderer.invoke("open-external",e),removeAllListeners:()=>{["log-update","log-reset","log-status","log-path-updated","kill-feed-event","auth-status-changed","connection-status-changed","game-mode-update","settings-window-status","web-content-window-status","update-checking","update-available","update-not-available","update-download-progress","update-downloaded","update-error"].forEach(t=>n.ipcRenderer.removeAllListeners(t))}});n.contextBridge.exposeInMainWorld("electronAPI",{minimizeWindow:()=>{console.log("Minimize button clicked, sending window-minimize"),n.ipcRenderer.send("window-minimize")},maximizeWindow:()=>{console.log("Maximize button clicked, sending window-maximize"),n.ipcRenderer.send("window-maximize")},closeWindow:()=>{console.log("Close button clicked, sending window-close"),n.ipcRenderer.send("window-close")},navigation:{request:e=>(console.log(`Navigation request for section: ${e}`),n.ipcRenderer.invoke("navigation:request",e)),close:e=>(console.log(`Navigation close request for section: ${e||"current"}`),n.ipcRenderer.invoke("navigation:close",e)),getState:()=>(console.log("Getting navigation state"),n.ipcRenderer.invoke("navigation:get-state")),onStateChange:e=>{console.log("Setting up navigation state change listener");const t=(o,r)=>e(r);return n.ipcRenderer.on("navigation-state-changed",t),()=>{n.ipcRenderer.removeListener("navigation-state-changed",t)}}}});window.addEventListener("DOMContentLoaded",async()=>{console.log("DOMContentLoaded - attempting to load titlebar...");try{console.log("Importing custom-electron-titlebar...");const e=await u(()=>Promise.resolve().then(()=>require("./index.mjs")).then(t=>t.index),void 0);console.log("Titlebar module loaded:",e),l=e.Titlebar,p=e.TitlebarColor,console.log("Creating titlebar with TitlebarColor.TRANSPARENT..."),new l({backgroundColor:p.TRANSPARENT,titleHorizontalAlignment:"center",enableMnemonics:!1,unfocusEffect:!1}),console.log("Titlebar initialized successfully")}catch(e){console.error("Failed to load titlebar:",e),console.error("Error details:",e instanceof Error?e.message:String(e)),console.log("Creating fallback titlebar..."),g()}});function g(){const e=document.createElement("div");e.style.cssText=`
    position: fixed;
    top: 0;
    left: 0;
    right: 0;
    height: 32px;
    background: transparent;
    display: flex;
    justify-content: flex-end;
    align-items: center;
    z-index: 9999;
    -webkit-app-region: drag;
  `;const t=document.createElement("div");t.style.cssText=`
    display: flex;
    -webkit-app-region: no-drag;
  `;const o=c("−",()=>{console.log("Minimize button clicked in fallback titlebar"),console.log("Sending window-minimize via direct ipcRenderer"),n.ipcRenderer.send("window-minimize")}),r=c("□",()=>{console.log("Maximize button clicked in fallback titlebar"),console.log("Sending window-maximize via direct ipcRenderer"),n.ipcRenderer.send("window-maximize")}),i=c("×",()=>{console.log("Close button clicked in fallback titlebar"),console.log("Sending window-close via direct ipcRenderer"),n.ipcRenderer.send("window-close")});i.addEventListener("mouseenter",()=>{i.style.backgroundColor="#e81123"}),i.addEventListener("mouseleave",()=>{i.style.backgroundColor="transparent"}),t.appendChild(o),t.appendChild(r),t.appendChild(i),e.appendChild(t),document.body.appendChild(e),console.log("Fallback titlebar created")}function c(e,t){const o=document.createElement("button");return o.textContent=e,o.style.cssText=`
    width: 46px;
    height: 32px;
    border: none;
    background: transparent;
    color: white;
    font-size: 16px;
    cursor: pointer;
    display: flex;
    align-items: center;
    justify-content: center;
    transition: background-color 0.2s;
  `,o.addEventListener("mouseenter",()=>{o.style.backgroundColor="rgba(255, 255, 255, 0.1)"}),o.addEventListener("mouseleave",()=>{o.style.backgroundColor="transparent"}),o.addEventListener("click",t),o}
