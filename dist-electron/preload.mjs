"use strict";const n=require("electron");n.contextBridge.exposeInMainWorld("ipcRenderer",{on(...e){const[i,r]=e;return n.ipcRenderer.on(i,(t,...o)=>r(t,...o))},off(...e){const[i,...r]=e;return n.ipcRenderer.off(i,...r)},send(...e){const[i,...r]=e;return n.ipcRenderer.send(i,...r)},invoke(...e){const[i,...r]=e;return n.ipcRenderer.invoke(i,...r)}});n.contextBridge.exposeInMainWorld("logMonitorApi",{getLogPath:()=>n.ipcRenderer.invoke("get-log-path"),setLogPath:e=>n.ipcRenderer.send("set-log-path",e),selectLogDirectory:()=>n.ipcRenderer.invoke("select-log-directory"),getSessions:e=>n.ipcRenderer.invoke("get-sessions",e),getKillEvents:e=>n.ipcRenderer.invoke("get-kill-events",e),getGlobalKillEvents:e=>n.ipcRenderer.invoke("get-global-kill-events",e),setFeedMode:e=>n.ipcRenderer.invoke("set-feed-mode",e),getFeedMode:()=>n.ipcRenderer.invoke("get-feed-mode"),openEventDetailsWindow:e=>{console.log("Preload: Calling openEventDetailsWindow with event ID:",e==null?void 0:e.id);try{const i=JSON.stringify(e),r=JSON.parse(i);return console.log("Preload: Serialized event data successfully"),n.ipcRenderer.invoke("open-event-details-window",r)}catch(i){console.error("Preload: Error serializing event data:",i);const r={id:(e==null?void 0:e.id)||"unknown-id",timestamp:(e==null?void 0:e.timestamp)||new Date().toISOString(),deathType:(e==null?void 0:e.deathType)||"Unknown"};return console.log("Preload: Trying with minimal data:",r),n.ipcRenderer.invoke("open-event-details-window",r)}},getPassedEventData:()=>(console.log("Preload: Getting passed event data"),n.ipcRenderer.invoke("get-passed-event-data")),closeCurrentWindow:()=>(console.log("Preload: Requesting to close current window"),n.ipcRenderer.invoke("close-current-window")),getLastLoggedInUser:()=>n.ipcRenderer.invoke("get-last-logged-in-user"),getNotificationSettings:()=>n.ipcRenderer.invoke("get-notification-settings"),setNotificationSettings:e=>n.ipcRenderer.invoke("set-notification-settings",e),getLastActivePage:()=>n.ipcRenderer.invoke("get-last-active-page"),setLastActivePage:e=>n.ipcRenderer.invoke("set-last-active-page",e),getFetchProfileData:()=>n.ipcRenderer.invoke("get-fetch-profile-data"),setFetchProfileData:e=>n.ipcRenderer.invoke("set-fetch-profile-data",e),getSoundEffects:()=>n.ipcRenderer.invoke("get-sound-effects"),setSoundEffects:e=>n.ipcRenderer.invoke("set-sound-effects",e),getApiSettings:()=>n.ipcRenderer.invoke("get-api-settings"),setApiSettings:e=>n.ipcRenderer.invoke("set-api-settings",e),getCsvLogPath:()=>n.ipcRenderer.invoke("get-csv-log-path"),setCsvLogPath:e=>n.ipcRenderer.invoke("set-csv-log-path",e),openSettingsWindow:()=>n.ipcRenderer.invoke("open-settings-window"),windowMinimize:()=>n.ipcRenderer.send("window:minimize"),windowToggleMaximize:()=>n.ipcRenderer.send("window:toggleMaximize"),windowClose:()=>n.ipcRenderer.send("window:close"),resetSessions:()=>n.ipcRenderer.invoke("reset-sessions"),resetEvents:()=>n.ipcRenderer.invoke("reset-events"),rescanLog:()=>n.ipcRenderer.invoke("rescan-log"),authLogin:(e,i)=>n.ipcRenderer.invoke("auth:login",e,i),authLogout:()=>n.ipcRenderer.invoke("auth:logout"),authGetStatus:()=>n.ipcRenderer.invoke("auth:getStatus"),onLogUpdate:e=>(n.ipcRenderer.on("log-update",e),()=>n.ipcRenderer.removeListener("log-update",e)),onLogReset:e=>(n.ipcRenderer.on("log-reset",e),()=>n.ipcRenderer.removeListener("log-reset",e)),onLogStatus:e=>(n.ipcRenderer.on("log-status",e),()=>n.ipcRenderer.removeListener("log-status",e)),onLogPathUpdated:e=>(n.ipcRenderer.on("log-path-updated",e),()=>n.ipcRenderer.removeListener("log-path-updated",e)),onKillFeedEvent:e=>(n.ipcRenderer.on("kill-feed-event",e),()=>n.ipcRenderer.removeListener("kill-feed-event",e)),removeAllListeners:()=>{n.ipcRenderer.removeAllListeners("log-update"),n.ipcRenderer.removeAllListeners("log-reset"),n.ipcRenderer.removeAllListeners("log-status"),n.ipcRenderer.removeAllListeners("log-path-updated"),n.ipcRenderer.removeAllListeners("kill-feed-event")}});
